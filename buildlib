#!/bin/bash

#####################################################

# Path to library source code root
SRC_PATH="src/libmonga"

# Path to folder containing library headers meant to be exported to the build directory
EXPORT_HEADERS_PATH=$SRC_PATH/include

# Path to LEX/YACC generated source code
GEN_SRC_PATH="bin/gensrc"

# Path to send the debug monga lib file
OUT_PATH_DEBUG="bin/builds/libmonga/debug"

# Path to send the release monga lib file
OUT_PATH_RELEASE="bin/builds/libmonga/release"

# Path to export the monga headers to
OUT_PATH_HEADERS="bin/builds/libmonga/include"

# Extra arguments passed to the compiler
COMPILER_ARGS="-Wall -Wextra -I$GEN_SRC_PATH -I$EXPORT_HEADERS_PATH -I$SRC_PATH -DMON_COMPILING_LIB"

# Extra debug arguments passed to the compiler
DEBUG_ARGS="-DMON_DEBUG\ -g\ -Og"

# Extra release arguments passed to the compiler
RELEASE_ARGS="-DNDEBUG\ -O2"

#####################################################

# Arg $1 is the destpath and other args are extra compiler arguments
function build_lib {
	./buildlex &&
	./buildyacc &&
	echo "Building library..."

	# generate object files
	for file in $(find $SRC_PATH -name "*.c"); do
		cmd="gcc $COMPILER_ARGS $2 -fpic -c $file"
		echo $cmd
		eval $cmd
	done
	for file in $GEN_SRC_PATH/*.c; do
		cmd="gcc $COMPILER_ARGS $2 -fpic -c $file"
		echo $cmd
		eval $cmd
	done

	wait

	# add them to single string to be fed into gcc
	objects=""
	for file in "./*.o"; do
		objects+=" $file"
	done

	# generate library
	rm $1/libmonga.a
	ar rcs $1/libmonga.a $objects

	# remove object files
	for o in $objects; do
		rm $o
	done
}

build_lib $OUT_PATH_DEBUG $DEBUG_ARGS
build_lib $OUT_PATH_RELEASE $RELEASE_ARGS

# copy headers from source path to build/include and delete previous ones
rm -R $OUT_PATH_HEADERS
cp -R $EXPORT_HEADERS_PATH $OUT_PATH_HEADERS